server {
    listen   80;
#    listen   [::]:80;

    access_log /var/log/nginx/filebin-dev-access.log;

    # Please note that the root path should point to the directory where
    # the tags and files are being stored.
    root /srv/www/filebin/files/;

    index index.html index.htm;
    server_name localhost;

    # http://aspyct.org/blog/2012/08/20/setting-up-http-cache-and-gzip-with-nginx/
    gzip on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
    gzip_buffers 16 8k;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    server_tokens off;

    client_max_body_size       0;

    # For historical compability
    rewrite ^/([^/]+)/file/(.*) $uri/$1/$2 permanent;
    rewrite ^/admin/([^/]+)/([^/]+)/(.+) $uri/$1?v=configuration&key=$2 permanent;

    location /static {
        root /srv/www/filebin/;
    }

    location /thumbnails {
        root /srv/www/filebin/;
    }

    location /uploader {
        limit_except POST          { deny all; }

        client_body_temp_path      /srv/www/filebin/temp;
        client_body_in_file_only   clean;
        client_body_buffer_size    128K;

        proxy_pass_request_headers on;
        proxy_set_header           host        $host;
        proxy_set_header           x-tempfile  $request_body_file;
        proxy_set_header           x-filename  $http_x_filename;
        proxy_set_header           x-tag       $http_x_tag;
        proxy_set_header           x-size      $http_x_size;
        proxy_set_header           x-useragent $http_user_agent;
        proxy_set_header           x-checksum  $http_x_checksum;
        proxy_set_header           x-client    $remote_addr;
        proxy_set_body             off;
        proxy_redirect             off;

        # A high timeout is necessary to let the backend calculate the
        # checksum and move the (potentially large) file into place.
        proxy_read_timeout         3600;
        proxy_pass                 http://localhost/callback-upload;
    }

    location /overview {
        try_files $uri @filebin;
        allow   192.168.35.0/24;
        deny    all;
    }

    location /monitor {
        try_files $uri @filebin;
        allow   192.168.35.0/24;
        deny    all;
    }

    # Restrict world access to the maintenance uri
    location /maintenance {
        try_files $uri @filebin;
        allow   192.168.35.0/24;
        deny    all;
    }

    # Try to serve the file if the file exists, or let the web application
    # handle the request.
    location / { try_files $uri @filebin; }
    location @filebin {
        include uwsgi_params;
        uwsgi_param                REMOTE_ADDR $remote_addr;
        uwsgi_param                REMOTE_PORT $remote_port;
        uwsgi_read_timeout         6000;
        uwsgi_send_timeout         6000;

        # Disable max temp file size to allow huge archives
        uwsgi_max_temp_file_size   0;

        client_body_buffer_size    128k;
        uwsgi_pass unix:/run/shm/filebin.sock;
    }
}
